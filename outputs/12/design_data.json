{
  "design_document": {
    "overview": "Enable RFI text generation to dynamically switch between Azure AI and Appian native AI based on configuration. The system uses a configuration rule to determine which AI service to invoke for generating RFI content from requirement descriptions.",
    "objects": [
      {
        "name": "AS_RM_Get_AI_RFI_Response",
        "type": "Process Model",
        "description": "Main orchestration process that handles AI provider selection and RFI generation workflow",
        "methods": ["checkAIConfiguration", "invokeAppianAI", "invokeAzureAI", "handleResponse", "handleError"]
      },
      {
        "name": "AS_RM_EnableOrDisableAppianAIForSummarization_wrapper",
        "type": "Expression Rule",
        "description": "Configuration rule that returns boolean to determine which AI service to use",
        "methods": ["evaluateAIConfiguration"]
      },
      {
        "name": "AS_RM_AI_generateRFITextFromDescription",
        "type": "AI Skill",
        "description": "Appian native AI skill for generating RFI text from requirement descriptions",
        "methods": ["generateRFIContent", "processDescription"]
      },
      {
        "name": "Azure_AI_Integration_Object",
        "type": "Integration",
        "description": "Azure AI service integration for RFI text generation when Appian AI is disabled",
        "methods": ["callAzureAPI", "formatRequest", "parseResponse"]
      },
      {
        "name": "AS_RM_FM_GenerateAIRfi",
        "type": "Interface",
        "description": "User interface form for initiating RFI generation from requirement summary page",
        "methods": ["displayGenerateAction", "captureUserInput", "triggerGeneration"]
      },
      {
        "name": "XOR_Gateway_Node",
        "type": "Process Node",
        "description": "Decision gateway that routes to appropriate AI service based on configuration",
        "methods": ["evaluateCondition", "routeToService"]
      },
      {
        "name": "Execute_Gen_AI_Node",
        "type": "Process Node",
        "description": "Node that executes the selected AI service for RFI generation",
        "methods": ["executeAISkill", "configureInputs", "captureOutput"]
      }
    ],
    "implementation_notes": [
      "XOR gateway at process start checks AS_RM_EnableOrDisableAppianAIForSummarization_wrapper output",
      "True result routes to Appian native AI skill execution",
      "False result routes to Azure AI integration call",
      "AI response and error messages stored in aiRequestForInfo variable",
      "Form interface cleaned of test fields for production deployment",
      "Error handling implemented for both AI service paths"
    ],
    "dependencies": [
      "AS_RM_EnableOrDisableAppianAIForSummarization_wrapper rule",
      "AS_RM_AI_generateRFITextFromDescription AI skill",
      "Azure AI service integration",
      "Requirement summary page interface",
      "aiRequestForInfo process variable",
      "AI service authentication and connectivity"
    ]
  }
}
